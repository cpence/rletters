
# ----------------------------------------------------------------------------
# Personalization and branding

# The name of the application
# APP_NAME=RLetters

# The e-mail address contact for the application
# APP_EMAIL=noreply@example.com

# The password which will be used to log into the administration interface.
# Notably, this being stored here does not decrease security: if you have
# access to the process environment, you have access to the database connection
# information, and so you could do anything that is possible in the site
# administration interface anyway. Change this value!
ADMIN_PASSWORD=adminpw

# The primary color of your branding, which will be used in MS tile colors, the
# Safari pinned-tab icon, etc.
# BRANDING_COLOR='#007bff'

# If set, add a Bootswatch theme to Bootstrap. Check out the list of themes at
# https://bootswatch.com/.
# BOOTSWATCH_THEME=cerulean


# ----------------------------------------------------------------------------
# Server settings

# Puma can serve the application code in multiple worker processes if you
# configure it here.
WEB_CONCURRENCY=2

# Each worker process can then run the requested number of Rails threads.
RAILS_MAX_THREADS=5

# If this variable is uncommented, force all app connections to occur
# over HTTPS, and send secure-only cookies.
# HTTPS_ONLY=true

# If this variable is set, delayed jobs will not actually delay, and will run
# immediately, blocking the web server. Useful only for local deployments on
# small datasets.
# BLOCKING_JOBS=true

# If this variable is set to 'heroku', we will hire and fire Heroku worker
# dynos automatically for jobs in the 'analysis' queue. If it is set to
# 'local', we will spin up and down new worker processes automatically.
# Otherwise, the user is responsible for creating the relevant workers.
# AUTOSCALE_JOBS=

# If AUTOSCALE_JOBS is set to 'heroku', you must set the following variable
# to an OAuth key for your Heroku application, to allow us to hire and fire
# dynos.
# AUTOSCALE_API_KEY=2f01aac0-e9d3-4773-af4e-3e510aa006ca

# The default job timeout is designed for running on Heroku, and is set to
# twelve hours. If you're running a local instance, you might want to increase
# this time for long-running analysis tasks.
# JOB_TIMEOUT=12

# URL to the database. We only support PostgreSQL, and we recommend a pool
# size of at least 20, to account for concurrency in the frontend and a
# reasonable number of workers in the backend.
#
# This default URL connects to the local user socket, which is usually what
# you want on a development machine.
DATABASE_URL=postgres:///rletters

# URL to the Solr instance. This must be set up using RLetters' Solr schema,
# which can be found here:
# <https://github.com/rletters/solr-example/blob/master/solr/collection1/conf/schema.xml>
#
# This default URL connects to the example Solr instance that can be deployed
# by checking out the repository where the schema is found.
SOLR_URL=http://127.0.0.1:8983/solr/core1

# The timeout for connections to Solr, in seconds. The default is incredibly
# high, because running large Solr queries can result in exceptional query
# times in many configurations. Lower this at your own risk.
# SOLR_TIMEOUT=120

# File storage directory. If unset, we'll default to using the Rails-local
# 'tmp/storage' directory.
# FILE_PATH=

# S3 credentials for file storage. If all of the following block of
# configuration values is set, we will upload all files to the given S3
# bucket rather than saving them locally.
# S3_ACCESS_KEY_ID=123...
# S3_SECRET_ACCESS_KEY=abc...
# S3_BUCKET=bucket_name
# S3_REGION=us-east-1


# ----------------------------------------------------------------------------
# Email settings

# The domain name from which application e-mail should originate
# MAIL_DOMAIN=example.com

# The delivery method that should be used for email (should be one of
# mailgun, mandrill, postmark, sendgrid, sendmail, smtp)
# MAIL_DELIVERY_METHOD=sendmail

# Configuration variables for all of the various mail delivery options
# available in RLetters
#   Mailgun
# MAILGUN_API_KEY=your-api-key
#   Mandrill
# MANDRILL_API_KEY=your-api-key
#   Postmark
# POSTMARK_API_KEY=your-api-key
#   Sendgrid
# SENDGRID_API_USER=your-username
# SENDGRID_API_KEY=your-password
#   Sendmail (local MTA)
# SENDMAIL_LOCATION=/usr/sbin/sendmail
# SENDMAIL_ARGUMENTS=-i -t
#   SMTP server
# SMTP_ADDRESS=localhost
# SMTP_PORT=25
# SMTP_DOMAIN=helo.domain.com
# SMTP_USERNAME=your-username
# SMTP_PASSWORD=your-password
# SMTP_AUTHENTICATION=plain,login,cram_md5
# SMTP_ENABLE_STARTTLS_AUTO=true
# SMTP_OPENSSL_VERIFY_MODE=none,peer,client_once,fail_if_no_peer_cert


# ----------------------------------------------------------------------------
# Feature flags

# If specified, show a maintenance message at the top of every page as a
# non-dismissable alert.
# MAINTENANCE_MESSAGE='Down for maintenance on Sunday...'

# Every analysis job can be optionally disabled using the feature flags in
# the following block, if your users do not require them and/or they are
# proving computationally prohibitive on your installation.
# ARTICLE_DATES_JOB_DISABLED=1
# COLLOCATION_JOB_DISABLED=1
# COOCCURRENCE_JOB_DISABLED=1
# CRAIG_ZETA_JOB_DISABLED=1
# EXPORT_CITATIONS_JOB_DISABLED=1
# PROPER_NAMES_JOB_DISABLED=1
# NETWORK_JOB_DISABLED=1
# TERM_DATES_JOB_DISABLED=1
# WORD_FREQUENCY_JOB_DISABLED=1


# ----------------------------------------------------------------------------
# Secret keys (ignore; run `rake rletters:secrets:env` instead)

# The following lines will be regenerated when you run
# `rake rletters:secrets:env`. (You must do this before starting up in
# production, or an error will be raised.)
# SECRET_KEY_BASE=asdf
# DEVISE_SECRET_KEY=asdf
