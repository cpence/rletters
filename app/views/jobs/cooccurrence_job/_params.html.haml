.row
  .col-12.col-md-6
    = form_for :job_params, url: dataset_tasks_path(dataset, class: 'CooccurrenceJob'), method: :post, html: { novalidate: true, class: 'needs-validation' } do |f|
      .card.card-body.mb-3
        %h5.card-title= t('cooccurrence_job.options_label')

        .form-group
          = f.label :scoring, t('common.scoring.label')
          = f.select :scoring, options_for_select(CollocationJob.significance_tests), { include_blank: false }, class: 'form-control'
        .form-group
          = f.label :num_pairs, t('cooccurrence_job.num_pairs')
          = f.number_field :num_pairs, value: 50, class: 'form-control'
        .form-group
          .form-check
            = f.check_box :all, class: 'form-check-input'
            = f.label :all, t('cooccurrence_job.all'), class: 'form-check-label'
        .form-group
          = f.label :window, t('cooccurrence_job.window')
          = f.number_field :window, class: 'form-control', required: true
          .invalid-feedback= validation_errors_for(:job_params, :window, true, 'cooccurrence_job.window_blank')
        .form-group
          = f.label :min_count, t('cooccurrence_job.min_count')
          = f.number_field :min_count, value: 3, class: 'form-control'
        .form-group
          = f.label :words, t('cooccurrence_job.words')
          = f.text_field :words, class: 'form-control', required: true
          .invalid-feedback= validation_errors_for(:job_params, :words, true, 'cooccurrence_job.words_blank')
        .form-group
          = f.label :stemming, t('common.stemming.label')
          = f.select :stemming, options_for_select([[t('common.no'), :no], [t('common.stemming.stem'), :stem], [t('common.stemming.lemma'), :lemma]]), { include_blank: false }, class: 'form-control'

      .float-right
        = link_to(t('common.cancel'), dataset, class: 'btn btn-secondary')
        = f.submit class: 'btn btn-primary'
