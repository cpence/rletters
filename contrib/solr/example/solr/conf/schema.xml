<?xml version="1.0" encoding="UTF-8" ?>
<!--  
 PERFORMANCE NOTE: this schema includes many optional features and should not
 be used for benchmarking.  To improve performance one could
  - set stored="false" for all fields possible (esp large fields) when you
    only need to search on the field but don't need to return the original
    value.
  - set indexed="false" if you don't need to search on the field, but only
    return the field as a result of searching on other indexed fields.
  - remove all unneeded copyField statements
  - for best index size and searching performance, set "index" to false
    for all general text fields, use copyField to copy them to the
    catchall "text" field, and use that for searching.
  - For maximum indexing performance, use the StreamingUpdateSolrServer
    java client.
  - Remember to run the JVM in server mode, and use a higher logging level
    that avoids logging every request
-->

<schema name="rletters_testing" version="1.2">
  <types>
    <fieldType name="string" class="solr.StrField" sortMissingLast="true" omitNorms="true"/>

    <!-- The following are included with Solr, but we aren't using them

    <fieldType name="boolean" class="solr.BoolField" sortMissingLast="true" omitNorms="true"/>
    <fieldtype name="binary" class="solr.BinaryField"/>
    <fieldType name="int" class="solr.TrieIntField" precisionStep="0" omitNorms="true" positionIncrementGap="0"/>
    <fieldType name="float" class="solr.TrieFloatField" precisionStep="0" omitNorms="true" positionIncrementGap="0"/>
    <fieldType name="long" class="solr.TrieLongField" precisionStep="0" omitNorms="true" positionIncrementGap="0"/>
    <fieldType name="double" class="solr.TrieDoubleField" precisionStep="0" omitNorms="true" positionIncrementGap="0"/>
    <fieldType name="tint" class="solr.TrieIntField" precisionStep="8" omitNorms="true" positionIncrementGap="0"/>
    <fieldType name="tfloat" class="solr.TrieFloatField" precisionStep="8" omitNorms="true" positionIncrementGap="0"/>
    <fieldType name="tlong" class="solr.TrieLongField" precisionStep="8" omitNorms="true" positionIncrementGap="0"/>
    <fieldType name="tdouble" class="solr.TrieDoubleField" precisionStep="8" omitNorms="true" positionIncrementGap="0"/>
    <fieldType name="date" class="solr.TrieDateField" omitNorms="true" precisionStep="0" positionIncrementGap="0"/>
    <fieldType name="tdate" class="solr.TrieDateField" omitNorms="true" precisionStep="6" positionIncrementGap="0"/>
    <fieldType name="pint" class="solr.IntField" omitNorms="true"/>
    <fieldType name="plong" class="solr.LongField" omitNorms="true"/>
    <fieldType name="pfloat" class="solr.FloatField" omitNorms="true"/>
    <fieldType name="pdouble" class="solr.DoubleField" omitNorms="true"/>
    <fieldType name="pdate" class="solr.DateField" sortMissingLast="true" omitNorms="true"/>
    <fieldType name="sint" class="solr.SortableIntField" sortMissingLast="true" omitNorms="true"/>
    <fieldType name="slong" class="solr.SortableLongField" sortMissingLast="true" omitNorms="true"/>
    <fieldType name="sfloat" class="solr.SortableFloatField" sortMissingLast="true" omitNorms="true"/>
    <fieldType name="sdouble" class="solr.SortableDoubleField" sortMissingLast="true" omitNorms="true"/>
    <fieldType name="random" class="solr.RandomSortField" indexed="true" />
    -->

    <!-- Don't even tokenize (for certain kinds of faceting) -->
    <fieldType name="text_noTokens" class="solr.TextField" positionIncrementGap="20">
      <analyzer>
        <!-- This tokenizer is completely misnamed: it does nothing to the input string -->
        <tokenizer class="solr.KeywordTokenizerFactory" />
      </analyzer>
    </fieldType>

    <!-- Split on commas, for faceting on the "Author" field -->
    <fieldType name="text_commaDelimited" class="solr.TextField" positionIncrementGap="20">
      <analyzer>
        <tokenizer class="solr.PatternTokenizerFactory" pattern=",\s*" />
      </analyzer>
    </fieldType>

    <!-- A field that splits on dashes and preserves original tokens; this is
         used only for page numbers (issue #4) -->
    <fieldType name="text_pageNumber" class="solr.TextField" positionIncrementGap="20">
      <analyzer>
        <tokenizer class="solr.WhitespaceTokenizerFactory"/>
        <filter class="solr.WordDelimiterFilterFactory"
                splitOnCaseChange="0"
                splitOnNumerics="0"
                stemEnglishPossessive="0"
                generateWordParts="1"
                generateNumberParts="1"
                catenateWords="0"
                catenateNumbers="0"
                catenateAll="0"
                preserveOriginal="1"/>
      </analyzer>
    </fieldType>

    <!-- NOTE: We make heavy use here of StandardTokenizerFactory and
         StandardFilterFactory.  In Solr versions greater than 3.1,
         these should be replaced by ClassicTokenizerFactory and
         ClassicFilterFactory. -->

    <!-- A text field that:
           - splits words
           - lowercases
           - removes punctuation from beginning and end of tokens (issue #2)

         When we search on this field, we remove stop words, as you never
         want to match stop words in a search query.  Stop words are, however,
         indexed, and thus will appear in things like word frequency lists
         (unless disabled at the analysis job level). -->
    <fieldType name="text_splitLower" class="solr.TextField" positionIncrementGap="100">
      <analyzer type="index">
        <tokenizer class="solr.StandardTokenizerFactory"/>
        <filter class="solr.LowerCaseFilterFactory"/>
        <!-- We do *not* want StandardFilterFactory here, as that removes
             apostrophe-S from the end of possessives, which is bad for
             text analysis.  Instead, strip all punctuation from the beginning
             and end of every word. -->
        <filter class="solr.PatternReplaceFilterFactory"
                pattern="^(\p{P}*)(.*?)(\p{P}*)$"
                replacement="$2"/>
      </analyzer>
      <analyzer type="query">
        <tokenizer class="solr.StandardTokenizerFactory"/>
        <filter class="solr.LowerCaseFilterFactory"/>
        <filter class="solr.PatternReplaceFilterFactory"
                pattern="^(\p{P}*)(.*?)(\p{P}*)$"
                replacement="$2"/>
        <!-- When we're querying, remove stop words from the queries so that
             they don't match against the full text. -->
        <filter class="solr.StopFilterFactory"
                ignoreCase="true"
                words="stopwords.txt"
                enablePositionIncrements="true"/>
      </analyzer>
    </fieldType>

    <!-- All the processing of the previous filter, plus:
           - Add WordDelimiterFilter to split on case-change, al-num boundaries,
             and non-alphanumeric characters ("wifi", "wi fi" match "Wi-Fi")
           - English-language stemming
    -->
    <fieldType name="text_splitLowerStopStem" class="solr.TextField" positionIncrementGap="100">
      <analyzer>
        <tokenizer class="solr.StandardTokenizerFactory"/>
        <filter class="solr.StandardFilterFactory"/>
        <filter class="solr.WordDelimiterFilterFactory" 
                generateWordParts="1" generateNumberParts="1"
                catenateWords="1" catenateNumbers="1" catenateAll="0"
                splitOnCaseChange="1"/>
        <filter class="solr.LowerCaseFilterFactory"/>
        <filter class="solr.PatternReplaceFilterFactory"
                pattern="^(\p{P}*)(.*?)(\p{P}*)$"
                replacement="$2"/>
        <filter class="solr.SnowballPorterFilterFactory" language="English"
                protected="protwords.txt"/>
        <filter class="solr.StopFilterFactory"
                ignoreCase="true"
                words="stopwords.txt"
                enablePositionIncrements="true"/>
      </analyzer>
    </fieldType>
 </types>


 <fields>
   <!-- Valid attributes for fields:
     name: mandatory - the name for the field
     type: mandatory - the name of a previously defined type from the 
       <types> section
     indexed: true if this field should be indexed (searchable or sortable)
     stored: true if this field should be retrievable
     multiValued: true if this field may contain multiple values per document
     omitNorms: (expert) set to true to omit the norms associated with
       this field (this disables length normalization and index-time
       boosting for the field, and saves some memory).  Only full-text
       fields or fields that need an index-time boost need norms.
     termVectors: [false] set to true to store the term vector for a
       given field.
       When using MoreLikeThis, fields used for similarity should be
       stored for best performance.
     termPositions: Store position information with the term vector.  
       This will increase storage costs.
     termOffsets: Store offset information with the term vector. This 
       will increase storage costs.
     default: a value that should be used if no value is specified
       when adding a document.
   -->

   <!-- SHA-1 sum and DOI are stored verbatim -->
   <field name="shasum" type="string" indexed="true" stored="true" required="true" omitNorms="true" />
   <field name="doi" type="string" indexed="true" stored="true" omitNorms="true" />
   
   <!-- The original bibliographic data: search it, but don't delete stopwords -->   
   <field name="authors" type="text_splitLower" indexed="true" stored="true" omitNorms="true" />
   <field name="title" type="text_splitLower" indexed="true" stored="true" omitNorms="true" />
   <field name="journal" type="text_splitLower" indexed="true" stored="true" omitNorms="true" />
   <field name="year" type="text_splitLower" indexed="true" stored="true" omitNorms="true" />
   <field name="volume" type="text_splitLower" indexed="true" stored="true" omitNorms="true" />
   <field name="number" type="text_splitLower" indexed="true" stored="true" omitNorms="true" />
   <field name="pages" type="text_pageNumber" indexed="true" stored="true" omitNorms="true" />

   <!-- The original full text, for text analysis -->
   <field name="fulltext" type="text_splitLower" indexed="true" stored="true" omitNorms="false" termVectors="true" termPositions="true" termOffsets="true" />

   <!-- These three fields can be searched with stemming enabled -->
   <field name="title_stem" type="text_splitLowerStopStem" indexed="true" stored="false" omitNorms="true" />
   <field name="journal_stem" type="text_splitLowerStopStem" indexed="true" stored="false" omitNorms="true" />
   <field name="fulltext_stem" type="text_splitLowerStopStem" indexed="true" stored="false" omitNorms="false" />

   <!-- Faceting stores data in different formats (authors are tokenized by author,
        journals aren't tokenized whatsoever) -->
   <field name="authors_facet" type="text_commaDelimited" indexed="true" stored="false" omitNorms="true" />
   <field name="journal_facet" type="text_noTokens" indexed="true" stored="false" omitNorms="true" />
   
   <!-- Sorting requires fields that aren't tokenized at all -->
   <field name="authors_sort" type="text_noTokens" indexed="true" stored="false" omitNorms="true" />
   <field name="title_sort" type="text_noTokens" indexed="true" stored="false" omitNorms="true" />
   <field name="journal_sort" type="text_noTokens" indexed="true" stored="false" omitNorms="true" />
   <field name="year_sort" type="text_noTokens" indexed="true" stored="false" omitNorms="true" />
 </fields>

 <!-- Field to use to determine and enforce document uniqueness. 
      Unless this field is marked with required="false", it will be a required field
   -->
 <uniqueKey>shasum</uniqueKey>

 <!-- SolrQueryParser configuration: defaultOperator="AND|OR" -->
 <solrQueryParser defaultOperator="OR"/>

 <!-- Copy our _stem fields -->
 <copyField source="title" dest="title_stem"/>
 <copyField source="journal" dest="journal_stem"/>
 <copyField source="fulltext" dest="fulltext_stem"/>

 <!-- Copy our facet fields -->
 <copyField source="authors" dest="authors_facet"/>
 <copyField source="journal" dest="journal_facet"/>

 <!-- Copy our sort fields -->
 <copyField source="authors" dest="authors_sort"/>
 <copyField source="title" dest="title_sort"/>
 <copyField source="journal" dest="journal_sort"/>
 <copyField source="year" dest="year_sort"/>
</schema>
