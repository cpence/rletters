<!-- THESE ARE ONLY SNIPPETS!  This is not meant to be a fully-functional
     schema.xml that can be plugged into Solr. -->

<?xml version="1.0" encoding="UTF-8" ?>
<schema name="rletters" version="1.2">
  <types>
    <fieldType name="string" class="solr.StrField" sortMissingLast="true" omitNorms="true"/>

    <!-- Don't even tokenize (for certain kinds of faceting) -->
    <fieldType name="text_noTokens" class="solr.TextField" positionIncrementGap="20">
      <analyzer>
        <!-- This tokenizer is completely misnamed: it does nothing to the input string -->
        <tokenizer class="solr.KeywordTokenizerFactory" />
      </analyzer>
    </fieldType>

    <!-- Split on commas, for faceting on the "Author" field -->
    <fieldType name="text_commaDelimited" class="solr.TextField" positionIncrementGap="20">
      <analyzer>
        <tokenizer class="solr.PatternTokenizerFactory" pattern=",\s*" />
      </analyzer>
    </fieldType>

    <!-- A field that splits on dashes and preserves original tokens; this is
         used only for page numbers (issue #4) -->
    <fieldType name="text_pageNumber" class="solr.TextField" positionIncrementGap="20">
      <analyzer>
        <tokenizer class="solr.WhitespaceTokenizerFactory"/>
        <filter class="solr.WordDelimiterFilterFactory"
                splitOnCaseChange="0"
                splitOnNumerics="0"
                stemEnglishPossessive="0"
                generateWordParts="1"
                generateNumberParts="1"
                catenateWords="0"
                catenateNumbers="0"
                catenateAll="0"
                preserveOriginal="1"/>
      </analyzer>
    </fieldType>

    <!-- A text field that only splits words and lowercases, otherwise leaving 
         verbatim, for searchable bibliographic data -->
    <fieldType name="text_searchableVerbatim" class="solr.TextField" positionIncrementGap="10">
      <analyzer>
        <tokenizer class="solr.WhitespaceTokenizerFactory"/>
        <!-- Strip leading and trailing punctuation (issue #2) -->
        <filter class="solr.PatternReplaceFilterFactory"
            pattern="^(\p{Punct}*)(.*?)(\p{Punct}*)$"
            replacement="$2"/>
        <filter class="solr.LowerCaseFilterFactory"/>
      </analyzer>
    </fieldType>    

    <!-- A text field that splits words, removes stop-words, and lower-cases 
         (for the TermComponent), and does nothing else.  In particular, no
         stemming. -->
    <fieldType name="text_searchable" class="solr.TextField" positionIncrementGap="100">
      <analyzer>
        <tokenizer class="solr.StandardTokenizerFactory"/>
        <filter class="solr.StopFilterFactory"
                ignoreCase="true"
                words="stopwords.txt"
                enablePositionIncrements="true"
                />
        <filter class="solr.StandardFilterFactory"/>
        <filter class="solr.LowerCaseFilterFactory"/>
      </analyzer>
    </fieldType>

    <!-- A text field that uses WordDelimiterFilter to enable splitting and matching of
        words on case-change, alpha numeric boundaries, and non-alphanumeric chars,
        so that a query of "wifi" or "wi fi" could match a document containing "Wi-Fi".
        Synonyms and stopwords are customized by external files, and stemming is enabled.
        -->
    <fieldType name="text_searchableStemmed" class="solr.TextField" positionIncrementGap="100">
      <analyzer type="index">
        <tokenizer class="solr.WhitespaceTokenizerFactory"/>
        <filter class="solr.StopFilterFactory"
                ignoreCase="true"
                words="stopwords.txt"
                enablePositionIncrements="true"
                />
        <filter class="solr.WordDelimiterFilterFactory" generateWordParts="1" generateNumberParts="1" catenateWords="1" catenateNumbers="1" catenateAll="0" splitOnCaseChange="1"/>
        <filter class="solr.LowerCaseFilterFactory"/>
        <filter class="solr.SnowballPorterFilterFactory" language="English" protected="protwords.txt"/>
      </analyzer>
      <analyzer type="query">
        <tokenizer class="solr.WhitespaceTokenizerFactory"/>
        <filter class="solr.SynonymFilterFactory" synonyms="synonyms.txt" ignoreCase="true" expand="true"/>
        <filter class="solr.StopFilterFactory"
                ignoreCase="true"
                words="stopwords.txt"
                enablePositionIncrements="true"
                />
        <filter class="solr.WordDelimiterFilterFactory" generateWordParts="1" generateNumberParts="1" catenateWords="0" catenateNumbers="0" catenateAll="0" splitOnCaseChange="1"/>
        <filter class="solr.LowerCaseFilterFactory"/>
        <filter class="solr.SnowballPorterFilterFactory" language="English" protected="protwords.txt"/>
      </analyzer>
    </fieldType>
 </types>


 <fields>
   <!-- SHA-1 sum and DOI are stored verbatim -->
   <field name="shasum" type="string" indexed="true" stored="true" required="true" omitNorms="true" />
   <field name="doi" type="string" indexed="true" stored="true" omitNorms="true" />
   
   <!-- The original bibliographic data: search it, but don't delete stopwords -->   
   <field name="authors" type="text_searchableVerbatim" indexed="true" stored="true" omitNorms="true" />
   <field name="title" type="text_searchableVerbatim" indexed="true" stored="true" omitNorms="true" />
   <field name="journal" type="text_searchableVerbatim" indexed="true" stored="true" omitNorms="true" />
   <field name="year" type="text_searchableVerbatim" indexed="true" stored="true" omitNorms="true" />
   <field name="volume" type="text_searchableVerbatim" indexed="true" stored="true" omitNorms="true" />
   <field name="number" type="text_searchableVerbatim" indexed="true" stored="true" omitNorms="true" />
   <field name="pages" type="text_pageNumber" indexed="true" stored="true" omitNorms="true" />

   <!-- Here we want searchable text, but with stopwords removed -->
   <field name="fulltext" type="text_searchable" indexed="true" stored="true" omitNorms="true" termVectors="true"
      termPositions="true" termOffsets="true" />

   <!-- These three fields can be searched with stemming enabled -->
   <field name="title_search" type="text_searchableStemmed" indexed="true" stored="false" omitNorms="true" />
   <field name="journal_search" type="text_searchableStemmed" indexed="true" stored="false" omitNorms="true" />
   <field name="fulltext_search" type="text_searchableStemmed" indexed="true" stored="false" omitNorms="false" />

   <!-- Faceting stores data in different formats (authors are tokenized by author,
        journals aren't tokenized whatsoever) -->
   <field name="authors_facet" type="text_commaDelimited" indexed="true" stored="false" omitNorms="true" />
   <field name="journal_facet" type="text_noTokens" indexed="true" stored="false" omitNorms="true" />
   
   <!-- Sorting requires fields that aren't tokenized at all -->
   <field name="authors_sort" type="text_noTokens" indexed="true" stored="false" omitNorms="true" />
   <field name="title_sort" type="text_noTokens" indexed="true" stored="false" omitNorms="true" />
   <field name="journal_sort" type="text_noTokens" indexed="true" stored="false" omitNorms="true" />
   <field name="year_sort" type="text_noTokens" indexed="true" stored="false" omitNorms="true" />
 </fields>

 <!-- Field to use to determine and enforce document uniqueness. 
      Unless this field is marked with required="false", it will be a required field
   -->
 <uniqueKey>shasum</uniqueKey>

 <!-- Copy our _search fields -->
 <copyField source="title" dest="title_search"/>
 <copyField source="journal" dest="journal_search"/>
 <copyField source="fulltext" dest="fulltext_search"/>

 <!-- Copy our facet fields -->
 <copyField source="authors" dest="authors_facet"/>
 <copyField source="journal" dest="journal_facet"/>

 <!-- Copy our sort fields -->
 <copyField source="authors" dest="authors_sort"/>
 <copyField source="title" dest="title_sort"/>
 <copyField source="journal" dest="journal_sort"/>
 <copyField source="year" dest="year_sort"/>

</schema>
